// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ntlt.projectradar.backend.Data;

#nullable disable

namespace ntlt.projectradar.backend.Migrations
{
    [DbContext(typeof(ProjectRadarContext))]
    [Migration("20250611101836_AddEmailDetailsAndAttachments")]
    partial class AddEmailDetailsAndAttachments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("ntlt.projectradar.backend.Models.EmailAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AttachmentContent")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("TEXT");

                    b.Property<string>("AttachmentFilename")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("AttachmentMimeType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EmailDetailsId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmailDetailsId");

                    b.ToTable("EmailAttachments");
                });

            modelBuilder.Entity("ntlt.projectradar.backend.Models.EmailDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailBodyHtml")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailBodyText")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EmailDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailFrom")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailSubject")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailTo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RawLeadId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EmailDetails");
                });

            modelBuilder.Entity("ntlt.projectradar.backend.Models.RawLead", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalContent")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProcessingStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RawLeads");
                });

            modelBuilder.Entity("ntlt.projectradar.backend.Models.EmailAttachment", b =>
                {
                    b.HasOne("ntlt.projectradar.backend.Models.EmailDetails", null)
                        .WithMany("Attachments")
                        .HasForeignKey("EmailDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ntlt.projectradar.backend.Models.EmailDetails", b =>
                {
                    b.Navigation("Attachments");
                });
#pragma warning restore 612, 618
        }
    }
}
